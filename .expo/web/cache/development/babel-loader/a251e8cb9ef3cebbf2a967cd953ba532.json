{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forModalPresentationIOS } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport CardAnimationContext from \"../../utils/CardAnimationContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nimport getInvertedMultiplier from \"../../utils/getInvertedMultiplier\";\nimport memoize from \"../../utils/memoize\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport ModalStatusBarManager from \"../ModalStatusBarManager\";\nimport CardSheet from \"./CardSheet\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    _classCallCheck(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.isCurrentlyMounted = false;\n    _this.isClosing = new Animated.Value(FALSE);\n    _this.inverted = new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection));\n    _this.layout = {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    };\n    _this.isSwiping = new Animated.Value(FALSE);\n    _this.animate = function (_ref2) {\n      var closing = _ref2.closing,\n        velocity = _ref2.velocity;\n      var _this$props = _this.props,\n        gesture = _this$props.gesture,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransition = _this$props.onTransition;\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref3) {\n        var finished = _ref3.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    };\n    _this.getAnimateToValue = function (_ref4) {\n      var closing = _ref4.closing,\n        layout = _ref4.layout,\n        gestureDirection = _ref4.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection);\n    };\n    _this.setPointerEventsEnabled = function (enabled) {\n      var _this$ref$current;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    };\n    _this.handleStartInteraction = function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    };\n    _this.handleEndInteraction = function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    };\n    _this.handleGestureStateChange = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n      var _this$props2 = _this.props,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    };\n    _this.getInterpolatedStyle = memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    });\n    _this.getCardAnimation = memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    });\n    _this.ref = React.createRef();\n    return _this;\n  }\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        interpolationIndex = _this$props5.interpolationIndex,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        headerDarkContent = _this$props5.headerDarkContent,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        rest = _objectWithoutProperties(_this$props5, _excluded);\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return React.createElement(CardAnimationContext.Provider, {\n        value: interpolationProps\n      }, Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(ModalStatusBarManager, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(CardSheet, {\n        ref: this.ref,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nCard.defaultProps = {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref) {\n    var style = _ref.style;\n    return style ? React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n};\nexport { Card as default };\nexport var getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["views/Stack/Card.tsx"],"names":["Color","React","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","Component","defaultProps","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","styles","componentDidMount","animate","closing","props","isCurrentlyMounted","componentDidUpdate","prevProps","layout","gestureDirection","width","height","setValue","inverted","toValue","getAnimateToValue","lastToValue","componentWillUnmount","gesture","stopAnimation","handleEndInteraction","isClosing","Animated","Value","isSwiping","velocity","transitionSpec","onOpen","onClose","onTransition","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","forceUpdate","enabled","pointerEvents","ref","current","setPointerEvents","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","state","ACTIVE","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","createRef","render","overlayEnabled","pageOverflowEnabled","headerDarkContent","children","containerStyle","customContainerStyle","contentStyle","rest","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","getIsModalPresentation","absoluteFill","container","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":"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","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport Color from 'color';\nimport * as React from 'react';\nimport { Animated, InteractionManager, Platform, StyleSheet, View } from 'react-native';\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport { GestureState, PanGestureHandler } from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet from './CardSheet';\nconst GESTURE_VELOCITY_IMPACT = 0.3;\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nconst useNativeDriver = Platform.OS !== 'web';\nconst hasOpacityStyle = style => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nexport default class Card extends React.Component {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: _ref => {\n      let {\n        style\n      } = _ref;\n      return style ? /*#__PURE__*/React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.overlay, style]\n      }) : null;\n    }\n  };\n  componentDidMount() {\n    this.animate({\n      closing: this.props.closing\n    });\n    this.isCurrentlyMounted = true;\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      layout,\n      gestureDirection,\n      closing\n    } = this.props;\n    const {\n      width,\n      height\n    } = layout;\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n    const toValue = this.getAnimateToValue(this.props);\n    if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({\n        closing\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n  isCurrentlyMounted = false;\n  isClosing = new Animated.Value(FALSE);\n  inverted = new Animated.Value(getInvertedMultiplier(this.props.gestureDirection));\n  layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height)\n  };\n  isSwiping = new Animated.Value(FALSE);\n  animate = _ref2 => {\n    let {\n      closing,\n      velocity\n    } = _ref2;\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransition\n    } = this.props;\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing\n    });\n    this.lastToValue = toValue;\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n    const animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n    clearTimeout(this.pendingGestureCallback);\n    onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n      closing,\n      gesture: velocity !== undefined\n    });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false\n    }).start(_ref3 => {\n      let {\n        finished\n      } = _ref3;\n      this.handleEndInteraction();\n      clearTimeout(this.pendingGestureCallback);\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n  getAnimateToValue = _ref4 => {\n    let {\n      closing,\n      layout,\n      gestureDirection\n    } = _ref4;\n    if (!closing) {\n      return 0;\n    }\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n  setPointerEventsEnabled = enabled => {\n    var _this$ref$current;\n    const pointerEvents = enabled ? 'box-none' : 'none';\n    (_this$ref$current = this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n  };\n  handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n  handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n  handleGestureStateChange = _ref5 => {\n    let {\n      nativeEvent\n    } = _ref5;\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact\n    } = this.props;\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n        break;\n      case GestureState.CANCELLED:\n        {\n          this.isSwiping.setValue(FALSE);\n          this.handleEndInteraction();\n          const velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n          this.animate({\n            closing: this.props.closing,\n            velocity\n          });\n          onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n          break;\n        }\n      case GestureState.END:\n        {\n          this.isSwiping.setValue(FALSE);\n          let distance;\n          let translation;\n          let velocity;\n          if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n            distance = layout.height;\n            translation = nativeEvent.translationY;\n            velocity = nativeEvent.velocityY;\n          } else {\n            distance = layout.width;\n            translation = nativeEvent.translationX;\n            velocity = nativeEvent.velocityX;\n          }\n          const closing = (translation + velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? velocity !== 0 || translation !== 0 : this.props.closing;\n          this.animate({\n            closing,\n            velocity\n          });\n          if (closing) {\n            // We call onClose with a delay to make sure that the animation has already started\n            // This will make sure that the state update caused by this doesn't affect start of animation\n            this.pendingGestureCallback = setTimeout(() => {\n              onClose();\n\n              // Trigger an update after we dispatch the action to remove the screen\n              // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n              this.forceUpdate();\n            }, 32);\n          }\n          onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n          break;\n        }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  getInterpolatedStyle = memoize((styleInterpolator, animation) => styleInterpolator(animation));\n\n  // Keep track of the animation context when deps changes.\n  getCardAnimation = memoize((interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) => ({\n    index: interpolationIndex,\n    current: {\n      progress: current\n    },\n    next: next && {\n      progress: next\n    },\n    closing: this.isClosing,\n    swiping: this.isSwiping,\n    inverted: this.inverted,\n    layouts: {\n      screen: layout\n    },\n    insets: {\n      top: insetTop,\n      right: insetRight,\n      bottom: insetBottom,\n      left: insetLeft\n    }\n  }));\n  gestureActivationCriteria() {\n    const {\n      layout,\n      gestureDirection,\n      gestureResponseDistance\n    } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n    const distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: {\n          bottom: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: {\n          top: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: {\n            right: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: {\n            left: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      }\n    }\n  }\n  ref = /*#__PURE__*/React.createRef();\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n    const interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n    const interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle\n    } = interpolatedStyle;\n    const handleGestureEvent = gestureEnabled ? Animated.event([{\n      nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n        translationY: gesture\n      } : {\n        translationX: gesture\n      }\n    }], {\n      useNativeDriver\n    }) : undefined;\n    const {\n      backgroundColor\n    } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n    return /*#__PURE__*/React.createElement(CardAnimationContext.Provider, {\n      value: interpolationProps\n    },\n    // StatusBar messes with translucent status bar on Android\n    // So we should only enable it on iOS\n    Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? /*#__PURE__*/React.createElement(ModalStatusBarManager, {\n      dark: headerDarkContent,\n      layout: layout,\n      insets: insets,\n      style: cardStyle\n    }) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: {\n        // This is a dummy style that doesn't actually change anything visually.\n        // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n        // If we disable animations and hide header, it could end up making the value unused.\n        // So we have this dummy style that will always be used regardless of what else changed.\n        opacity: current\n      }\n      // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n      ,\n      collapsable: false\n    }), /*#__PURE__*/React.createElement(View, _extends({\n      pointerEvents: \"box-none\"\n    }, rest), overlayEnabled ? /*#__PURE__*/React.createElement(View, {\n      pointerEvents: \"box-none\",\n      style: StyleSheet.absoluteFill\n    }, overlay({\n      style: overlayStyle\n    })) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.container, containerStyle, customContainerStyle],\n      pointerEvents: \"box-none\"\n    }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({\n      enabled: layout.width !== 0 && gestureEnabled,\n      onGestureEvent: handleGestureEvent,\n      onHandlerStateChange: this.handleGestureStateChange\n    }, this.gestureActivationCriteria()), /*#__PURE__*/React.createElement(Animated.View, {\n      needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n      style: [styles.container, cardStyle]\n    }, shadowEnabled && shadowStyle && !isTransparent ? /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n        backgroundColor\n      }, shadowStyle],\n      pointerEvents: \"none\"\n    }) : null, /*#__PURE__*/React.createElement(CardSheet, {\n      ref: this.ref,\n      enabled: pageOverflowEnabled,\n      layout: layout,\n      style: contentStyle\n    }, children))))));\n  }\n}\nexport const getIsModalPresentation = cardStyleInterpolator => {\n  return cardStyleInterpolator === forModalPresentationIOS ||\n  // Handle custom modal presentation interpolators as well\n  cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"module"}